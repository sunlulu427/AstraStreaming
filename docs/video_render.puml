@startuml
title 视频渲染（OpenGL 管线）

' Subtle color scheme - highlight only core components
skinparam participant {
  BackgroundColor #2b2b2b
  BorderColor #999999
  FontColor #f0f0f0
}
skinparam participant<<ui>> {
  BackgroundColor #3a3a3a
  BorderColor #666666
  FontColor #f0f0f0
}
skinparam participant<<control>> {
  BackgroundColor #4a4a4a
  BorderColor #777777
  FontColor #f0f0f0
}
skinparam participant<<core>> {
  BackgroundColor #D4AF37
  BorderColor #B8941F
  FontColor #2b2b2b
}
skinparam participant<<infrastructure>> {
  BackgroundColor #2b2b2b
  BorderColor #555555
  FontColor #cccccc
}
skinparam ArrowColor #c0c0c0
skinparam defaultFontName "JetBrains Mono"

participant GLSurfaceView <<ui>>
participant "GLThread" as GLThread <<control>>
participant EglHelper <<infrastructure>>
participant CameraRenderer <<core>>
participant FboRenderer <<core>>
participant SurfaceTexture <<infrastructure>>
participant "SurfaceView Surface" as Surface <<ui>>

GLSurfaceView -> GLThread: surfaceCreated()
GLThread -> EglHelper: initEgl(Surface, sharedContext)
EglHelper --> GLThread: EGLContext/EGLSurface
GLThread -> CameraRenderer: onSurfaceCreate(width,height)
CameraRenderer -> FboRenderer: onSurfaceCreate(width,height)
CameraRenderer -> SurfaceTexture: setDefaultBufferSize(width,height)

loop 每帧
  GLThread -> CameraRenderer: onDraw()
  CameraRenderer -> SurfaceTexture: updateTexImage()
  CameraRenderer -> CameraRenderer: glBindFramebuffer(FBO)
  CameraRenderer -> CameraRenderer: glBindTexture(GL_TEXTURE_EXTERNAL_OES)
  CameraRenderer -> CameraRenderer: glDrawArrays(预览)
  CameraRenderer -> FboRenderer: onDraw(cameraTexture)
  FboRenderer -> FboRenderer: glDrawArrays(叠加水印/滤镜)
  CameraRenderer -> CameraRenderer: glBindFramebuffer(GL_FRAMEBUFFER_0)
  CameraRenderer -> CameraRenderer: glDrawArrays(纹理到屏幕)
  GLThread -> EglHelper: swapBuffers()
end

note over CameraRenderer
updateAspect() 调整纹理坐标实现居中裁剪；
水印由 FboRenderer 在 FBO 中合成。
end note

@enduml
