@startuml
title 推流链路（封包 + RTMP）

' Subtle color scheme - highlight only core components
skinparam participant {
  BackgroundColor #2b2b2b
  BorderColor #999999
  FontColor #f0f0f0
}
skinparam participant<<control>> {
  BackgroundColor #4a4a4a
  BorderColor #777777
  FontColor #f0f0f0
}
skinparam participant<<core>> {
  BackgroundColor #D4AF37
  BorderColor #B8941F
  FontColor #2b2b2b
}
skinparam participant<<infrastructure>> {
  BackgroundColor #2b2b2b
  BorderColor #555555
  FontColor #cccccc
}
skinparam participant<<external>> {
  BackgroundColor #333333
  BorderColor #666666
  FontColor #aaaaaa
}
skinparam ArrowColor #c0c0c0
skinparam defaultFontName "JetBrains Mono"

participant StreamController <<control>>
participant Packer <<core>>
participant RtmpPacker <<core>>
participant RtmpSender <<infrastructure>>
participant "JNI Native" as Native <<infrastructure>>
participant "librtmp" as LibRtmp <<infrastructure>>
participant "RTMP Server" as Server <<external>>

StreamController -> Packer: onVideoData / onAudioData
Packer -> RtmpPacker: assemble(PacketType)
RtmpPacker -> RtmpPacker: mux to FLV tag
RtmpPacker -> StreamController: onPacket(byte[],type)
StreamController -> RtmpSender: onData(byte[],type)
RtmpSender -> Native: pushVideo()/pushAudio()
Native -> LibRtmp: RTMP_Write(packet)
LibRtmp -> Server: send(chunk)

== 建联 ==
StreamController -> RtmpSender: connect()
RtmpSender -> Native: NativeRtmpConnect(url)
Native -> LibRtmp: RTMP_Connect/RTMP_ConnectStream
LibRtmp --> RtmpSender: success/fail callbacks

note over RtmpPacker
原始码流封装：
* Video NALU -> FLV Video Tag (AVCPacket)
* Audio AAC -> FLV Audio Tag
* 包头写入时间戳/长度
end note

note over LibRtmp,Server
推流过程中按 chunkSize 切片，
携带控制消息（SetChunkSize、SetBufferLength、Publish 等）。
end note

@enduml
